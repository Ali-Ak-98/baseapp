---
kind: pipeline
name: "Stage"

concurrency:
  limit: 2

steps:
  - name: "Test & Build"
    image: node:12.13.1
    commands:
      - export REACT_APP_GIT_SHA=$(git rev-parse --short HEAD)
      - echo $REACT_APP_GIT_SHA > .tags
      - export BUILD_DOMAIN=$(cat .domains)
      - export BUILD_EXPIRE=$(date -d "+1 month" +%s000)
      - npm -g install yarn
      - yarn install
      - yarn lint
      - yarn test:ci --collectCoverage=true
      - yarn build

  - name: "Build enterprise customer image and push to reg.openware.work"
    image: plugins/docker
    settings:
      username:
        from_secret: ow_registry_username
      password:
        from_secret: ow_registry_password
      repo: reg.openware.work/emirex/baseapp
      tags: ${DRONE_COMMIT:0:7}
      registry: reg.openware.work

  - name: "Redeploy on stage"
    image: rubykube/microkube:0.2.0
    environment:
      WEBHOOK_JWT_SECRET:
        from_secret: emirex-webhook-secret
    commands:
    - export latest_image=reg.openware.work/emirex/baseapp:${DRONE_COMMIT_SHA:0:7}
    - cd /home/app
    - bundle exec rake payload:send[frontend,$latest_image,http://emirex.openware.work:1337]

  - name: "Notify staging"
    image: plugins/slack
    settings:
      webhook:
        from_secret: baseapp_slack_webhook
      channel:
        from_secret: baseapp_slack_channel
      template: >
        {{#success build.status}}
          [SUCCESS] (Base Application) Branch {{ build.branch }} by {{ build.author }} staging has succeeded!

          Visit http://{{ truncate build.commit 7 }}.mock.openware.work to check it out!
          Coverage report: http://{{ truncate build.commit 7 }}-coverage.mock.openware.work
        {{else}}
          [FAILURE] Branch {{ build.branch }} by {{ build.author }} staging has failed!
        {{/success}}
        Check the build info here: {{ build.link }}
    when:
      status: [success, failure]

trigger:
  branch:
    - customer/emirex-2.5
  event:
    - push
