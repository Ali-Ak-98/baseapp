---
kind: pipeline
name: "Stage"
trigger:
  event:
    - push
  branch:
    exclude:
      - "*-stable"

steps:
  - name: "Test & Build"
    image: node:12.13.1
    commands:
      - npm -g install yarn
      - yarn install
      - yarn lint
      - yarn test:ci --collectCoverage=true
      - ./scripts/build.sh

  - name: "Stage with mock server"
    image: instrumentisto/rsync-ssh
    environment:
      PRIVATE_KEY:
        from_secret: mock_deploy_key
    commands:
      - echo "$PRIVATE_KEY" | base64 -d > id_rsa
      - chmod 0600 id_rsa
      - echo "window.env={api:{authUrl:'http://api-v2.mock.openware.work/api/v2/barong',tradeUrl:'http://api-v2.mock.openware.work/api/v2/peatio',applogicUrl:'http://api-v2.mock.openware.work/api/v2/applogic',rangerUrl:'ws://ranger.mock.openware.work/api/v2/ranger'}};" > build/config/env.js
      - rsync -avzhre "ssh -i id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" build/ mock@mock.openware.work:/home/mock/builds/${DRONE_COMMIT_SHA:0:7}
      - rsync -avzhre "ssh -i id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" coverage/ mock@mock.openware.work:/home/mock/builds/${DRONE_COMMIT_SHA:0:7}-coverage
      - echo "http://${DRONE_COMMIT_SHA:0:7}.mock.openware.work"
      - echo "http://${DRONE_COMMIT_SHA:0:7}-coverage.mock.openware.work"

  - name: "Notify staging"
    image: plugins/slack
    settings:
      webhook:
        from_secret: baseapp_slack_webhook
      channel:
        from_secret: baseapp_slack_channel
      template: >
        {{#success build.status}}
          [SUCCESS] (Base Application) Branch {{ build.branch }} by {{ build.author }} staging has succeeded!
          Visit http://{{ truncate build.commit 7 }}.mock.openware.work to check it out!
          Coverage report: http://{{ truncate build.commit 7 }}-coverage.mock.openware.work
        {{else}}
          [FAILURE] Branch {{ build.branch }} by {{ build.author }} staging has failed!
        {{/success}}
        Check the build info here: {{ build.link }}
    when:
      status: [success, failure]


---
kind: pipeline
name: "Stable"
trigger:
  event:
    - push
  branch:
    - "*-stable"

steps:
  - name: "Test"
    image: node:12.13.1
    commands:
      - npm -g install yarn
      - yarn install
      - yarn lint
      - yarn test:ci

  - name: "Write tag"
    image: quay.io/openware/sdk-citools:2.3.1
    environment:
      BRANCH_NAME: ${DRONE_BRANCH}
      REPO_NAME: ${DRONE_REPO}
      GITHUB_API_KEY:
        from_secret: kite_bot_key
    commands:
      - BUNDLE_GEMFILE=/sdk/Gemfile bundle exec rake --rakefile=/sdk/Rakefile ci:prebuild

  - name: "Build docker image"
    image: plugins/gcr
    settings:
      repo:
        from_secret: gcr_frontend_repo
      json_key:
        from_secret: opendax_gcp_creds_base64
